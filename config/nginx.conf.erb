daemon off;
worker_processes auto;

events {
  use epoll;
  accept_mutex on;
  multi_accept on;
  worker_connections 1024;
}

http {
  gzip on;
  gzip_min_length 512;

  server_tokens off;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log logs/nginx/access.log l2met;
  error_log logs/nginx/error.log;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  client_max_body_size 20M;
  keepalive_timeout  0;

  # Must read the body in 5 seconds.
  # client_body_timeout 5;

  upstream app_server {
      server unix:/tmp/nginx.socket fail_timeout=0;
   }

  server {
    listen <%= ENV["PORT"] %>;
    server_name _;
    keepalive_timeout 5;

    # static
    location /static/ {
        root /app/app/;
    }

    location /api/ {
      include uwsgi_params;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $server_name;
      proxy_redirect off;
      proxy_pass http://app_server;
    }
    location / {
        root /app/app/web_files/;
    }
    location @htmlext {
        root /app/app/web_pages/;
        rewrite ^(.*)$ $1.html last;
    }
  }
}